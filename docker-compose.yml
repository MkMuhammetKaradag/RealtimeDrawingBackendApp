services:
  postgres:
    image: postgres:15
    container_name: realtime-drawing-postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    image: redis:alpine
    container_name: realtime-drawing-redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1s
      timeout: 3s
      retries: 30 # Retry many times to allow for startup
  # auth-service:
  #   build: ./auth-service
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     AUTH_SERVER_PORT: '8081'
  #     AUTH_POSTGRES_HOST: postgres
  #     AUTH_POSTGRES_PORT: '5432'
  #     AUTH_POSTGRES_USER: myuser
  #     AUTH_POSTGRES_PASSWORD: mypassword
  #     AUTH_POSTGRES_DB: authdb
  #   ports:
  #     - '8081:8081'
  #   healthcheck:
  #     test: ['CMD-SHELL', 'curl -sf http://localhost:8081/health || exit 1']
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10

  # gateway-service:
  #   build: ./gateway-service
  #   depends_on:
  #     - auth-service
  #   environment:
  #     GATEWAY_AUTH_HTTP: http://auth-service:8081
  #     GATEWAY_AUTH_WS: ws://auth-service:8081
  #   ports:
  #     - '8080:8080'

volumes:
  postgres_data:
    driver: local
